/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.Activity;
import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.ScoreHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 积分历史
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScoreHistory extends TableImpl<ScoreHistoryRecord> {

    private static final long serialVersionUID = -1658934957;

    /**
     * The reference instance of <code>activity.score_history</code>
     */
    public static final ScoreHistory SCORE_HISTORY = new ScoreHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScoreHistoryRecord> getRecordType() {
        return ScoreHistoryRecord.class;
    }

    /**
     * The column <code>activity.score_history.id</code>. 编号
     */
    public final TableField<ScoreHistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>activity.score_history.score</code>. 分值
     */
    public final TableField<ScoreHistoryRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER, this, "分值");

    /**
     * The column <code>activity.score_history.user_id</code>. 用户Id
     */
    public final TableField<ScoreHistoryRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户Id");

    /**
     * The column <code>activity.score_history.activity_id</code>.
     */
    public final TableField<ScoreHistoryRecord, Integer> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>activity.score_history.memo</code>. 积分说明
     */
    public final TableField<ScoreHistoryRecord, String> MEMO = createField("memo", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "积分说明");

    /**
     * The column <code>activity.score_history.created</code>.
     */
    public final TableField<ScoreHistoryRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>activity.score_history</code> table reference
     */
    public ScoreHistory() {
        this(DSL.name("score_history"), null);
    }

    /**
     * Create an aliased <code>activity.score_history</code> table reference
     */
    public ScoreHistory(String alias) {
        this(DSL.name(alias), SCORE_HISTORY);
    }

    /**
     * Create an aliased <code>activity.score_history</code> table reference
     */
    public ScoreHistory(Name alias) {
        this(alias, SCORE_HISTORY);
    }

    private ScoreHistory(Name alias, Table<ScoreHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScoreHistory(Name alias, Table<ScoreHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "积分历史");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Activity.ACTIVITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCORE_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ScoreHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SCORE_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScoreHistoryRecord> getPrimaryKey() {
        return Keys.KEY_SCORE_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScoreHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ScoreHistoryRecord>>asList(Keys.KEY_SCORE_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreHistory as(String alias) {
        return new ScoreHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoreHistory as(Name alias) {
        return new ScoreHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScoreHistory rename(String name) {
        return new ScoreHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScoreHistory rename(Name name) {
        return new ScoreHistory(name, null);
    }
}
