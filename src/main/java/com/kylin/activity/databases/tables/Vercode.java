/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.DefaultSchema;
import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.VercodeRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 验证码
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vercode extends TableImpl<VercodeRecord> {

    private static final long serialVersionUID = 1650801475;

    /**
     * The reference instance of <code>vercode</code>
     */
    public static final Vercode VERCODE = new Vercode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VercodeRecord> getRecordType() {
        return VercodeRecord.class;
    }

    /**
     * The column <code>vercode.id</code>. 编号
     */
    public final TableField<VercodeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>vercode.mobile</code>. 手机联系方式
     */
    public final TableField<VercodeRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(255), this, "手机联系方式");

    /**
     * The column <code>vercode.code</code>. 验证码
     */
    public final TableField<VercodeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "验证码");

    /**
     * The column <code>vercode.created</code>. 创建时间
     */
    public final TableField<VercodeRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * Create a <code>vercode</code> table reference
     */
    public Vercode() {
        this(DSL.name("vercode"), null);
    }

    /**
     * Create an aliased <code>vercode</code> table reference
     */
    public Vercode(String alias) {
        this(DSL.name(alias), VERCODE);
    }

    /**
     * Create an aliased <code>vercode</code> table reference
     */
    public Vercode(Name alias) {
        this(alias, VERCODE);
    }

    private Vercode(Name alias, Table<VercodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vercode(Name alias, Table<VercodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "验证码");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VERCODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VercodeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VERCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VercodeRecord> getPrimaryKey() {
        return Keys.KEY_VERCODE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VercodeRecord>> getKeys() {
        return Arrays.<UniqueKey<VercodeRecord>>asList(Keys.KEY_VERCODE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vercode as(String alias) {
        return new Vercode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vercode as(Name alias) {
        return new Vercode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vercode rename(String name) {
        return new Vercode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vercode rename(Name name) {
        return new Vercode(name, null);
    }
}
