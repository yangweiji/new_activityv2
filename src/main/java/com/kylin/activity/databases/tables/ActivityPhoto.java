/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.Activityv2;
import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.ActivityPhotoRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 活动相册
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityPhoto extends TableImpl<ActivityPhotoRecord> {

    private static final long serialVersionUID = 1824489661;

    /**
     * The reference instance of <code>activityv2.activity_photo</code>
     */
    public static final ActivityPhoto ACTIVITY_PHOTO = new ActivityPhoto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityPhotoRecord> getRecordType() {
        return ActivityPhotoRecord.class;
    }

    /**
     * The column <code>activityv2.activity_photo.id</code>. 编号
     */
    public final TableField<ActivityPhotoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>activityv2.activity_photo.activity_id</code>. 关联编号
     */
    public final TableField<ActivityPhotoRecord, Integer> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.INTEGER, this, "关联编号");

    /**
     * The column <code>activityv2.activity_photo.picture</code>. 图片
     */
    public final TableField<ActivityPhotoRecord, String> PICTURE = createField("picture", org.jooq.impl.SQLDataType.VARCHAR(255), this, "图片");

    /**
     * The column <code>activityv2.activity_photo.description</code>. 描述
     */
    public final TableField<ActivityPhotoRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "描述");

    /**
     * The column <code>activityv2.activity_photo.created</code>.
     */
    public final TableField<ActivityPhotoRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activityv2.activity_photo.created_by</code>.
     */
    public final TableField<ActivityPhotoRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>activityv2.activity_photo.axtenal_url</code>. 外部相册地址
     */
    public final TableField<ActivityPhotoRecord, String> AXTENAL_URL = createField("axtenal_url", org.jooq.impl.SQLDataType.VARCHAR(255), this, "外部相册地址");

    /**
     * The column <code>activityv2.activity_photo.browse_count</code>. 浏览次数
     */
    public final TableField<ActivityPhotoRecord, Integer> BROWSE_COUNT = createField("browse_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "浏览次数");

    /**
     * Create a <code>activityv2.activity_photo</code> table reference
     */
    public ActivityPhoto() {
        this(DSL.name("activity_photo"), null);
    }

    /**
     * Create an aliased <code>activityv2.activity_photo</code> table reference
     */
    public ActivityPhoto(String alias) {
        this(DSL.name(alias), ACTIVITY_PHOTO);
    }

    /**
     * Create an aliased <code>activityv2.activity_photo</code> table reference
     */
    public ActivityPhoto(Name alias) {
        this(alias, ACTIVITY_PHOTO);
    }

    private ActivityPhoto(Name alias, Table<ActivityPhotoRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityPhoto(Name alias, Table<ActivityPhotoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "活动相册");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Activityv2.ACTIVITYV2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACTIVITY_PHOTO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActivityPhotoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACTIVITY_PHOTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityPhotoRecord> getPrimaryKey() {
        return Keys.KEY_ACTIVITY_PHOTO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityPhotoRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityPhotoRecord>>asList(Keys.KEY_ACTIVITY_PHOTO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityPhoto as(String alias) {
        return new ActivityPhoto(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityPhoto as(Name alias) {
        return new ActivityPhoto(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityPhoto rename(String name) {
        return new ActivityPhoto(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityPhoto rename(Name name) {
        return new ActivityPhoto(name, null);
    }
}
