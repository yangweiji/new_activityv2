/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.ActivityRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 活动
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Activity extends TableImpl<ActivityRecord> {

    private static final long serialVersionUID = 858160370;

    /**
     * The reference instance of <code>activity.activity</code>
     */
    public static final Activity ACTIVITY_ = new Activity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityRecord> getRecordType() {
        return ActivityRecord.class;
    }

    /**
     * The column <code>activity.activity.id</code>. 编号
     */
    public final TableField<ActivityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>activity.activity.title</code>. 标题
     */
    public final TableField<ActivityRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "标题");

    /**
     * The column <code>activity.activity.avatar</code>. 标题图片
     */
    public final TableField<ActivityRecord, String> AVATAR = createField("avatar", org.jooq.impl.SQLDataType.VARCHAR(255), this, "标题图片");

    /**
     * The column <code>activity.activity.summary</code>. 摘要
     */
    public final TableField<ActivityRecord, String> SUMMARY = createField("summary", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "摘要");

    /**
     * The column <code>activity.activity.body</code>. 正文
     */
    public final TableField<ActivityRecord, String> BODY = createField("body", org.jooq.impl.SQLDataType.CLOB, this, "正文");

    /**
     * The column <code>activity.activity.unit</code>. 发布单位
     */
    public final TableField<ActivityRecord, String> UNIT = createField("unit", org.jooq.impl.SQLDataType.VARCHAR(255), this, "发布单位");

    /**
     * The column <code>activity.activity.tags</code>. 标签
     */
    public final TableField<ActivityRecord, String> TAGS = createField("tags", org.jooq.impl.SQLDataType.VARCHAR(255), this, "标签");

    /**
     * The column <code>activity.activity.status</code>. 状态 0 草稿 1 发布 -1 禁用
     */
    public final TableField<ActivityRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态 0 草稿 1 发布 -1 禁用");

    /**
     * The column <code>activity.activity.start_time</code>.
     */
    public final TableField<ActivityRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activity.activity.end_time</code>.
     */
    public final TableField<ActivityRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activity.activity.attend_due_time</code>.
     */
    public final TableField<ActivityRecord, Timestamp> ATTEND_DUE_TIME = createField("attend_due_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activity.activity.created</code>.
     */
    public final TableField<ActivityRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activity.activity.created_by</code>. 创建人
     */
    public final TableField<ActivityRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER, this, "创建人");

    /**
     * The column <code>activity.activity.modified</code>.
     */
    public final TableField<ActivityRecord, Timestamp> MODIFIED = createField("modified", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activity.activity.modified_by</code>. 修改人
     */
    public final TableField<ActivityRecord, Integer> MODIFIED_BY = createField("modified_by", org.jooq.impl.SQLDataType.INTEGER, this, "修改人");

    /**
     * The column <code>activity.activity.attend_infos</code>. 报名需要提交的表单信息 报名信息json
     */
    public final TableField<ActivityRecord, String> ATTEND_INFOS = createField("attend_infos", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "报名需要提交的表单信息 报名信息json");

    /**
     * The column <code>activity.activity.address</code>. 活动地址
     */
    public final TableField<ActivityRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "活动地址");

    /**
     * The column <code>activity.activity.coordinate</code>. 活动坐标
     */
    public final TableField<ActivityRecord, String> COORDINATE = createField("coordinate", org.jooq.impl.SQLDataType.VARCHAR(255), this, "活动坐标");

    /**
     * The column <code>activity.activity.activity_type</code>.
     */
    public final TableField<ActivityRecord, Integer> ACTIVITY_TYPE = createField("activity_type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>activity.activity.public</code>.
     */
    public final TableField<ActivityRecord, Boolean> PUBLIC = createField("public", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>activity.activity.score_infos</code>. 活动奖励积分信息
     */
    public final TableField<ActivityRecord, String> SCORE_INFOS = createField("score_infos", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "活动奖励积分信息");

    /**
     * The column <code>activity.activity.community_id</code>.
     */
    public final TableField<ActivityRecord, Integer> COMMUNITY_ID = createField("community_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>activity.activity</code> table reference
     */
    public Activity() {
        this(DSL.name("activity"), null);
    }

    /**
     * Create an aliased <code>activity.activity</code> table reference
     */
    public Activity(String alias) {
        this(DSL.name(alias), ACTIVITY_);
    }

    /**
     * Create an aliased <code>activity.activity</code> table reference
     */
    public Activity(Name alias) {
        this(alias, ACTIVITY_);
    }

    private Activity(Name alias, Table<ActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Activity(Name alias, Table<ActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "活动");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return com.kylin.activity.databases.Activity.ACTIVITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACTIVITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActivityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACTIVITY_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityRecord> getPrimaryKey() {
        return Keys.KEY_ACTIVITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityRecord>>asList(Keys.KEY_ACTIVITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Activity as(String alias) {
        return new Activity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Activity as(Name alias) {
        return new Activity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Activity rename(String name) {
        return new Activity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Activity rename(Name name) {
        return new Activity(name, null);
    }
}
