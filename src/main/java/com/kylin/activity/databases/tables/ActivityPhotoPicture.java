/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.DefaultSchema;
import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.ActivityPhotoPictureRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 图片集
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityPhotoPicture extends TableImpl<ActivityPhotoPictureRecord> {

    private static final long serialVersionUID = -1340569929;

    /**
     * The reference instance of <code>activity_photo_picture</code>
     */
    public static final ActivityPhotoPicture ACTIVITY_PHOTO_PICTURE = new ActivityPhotoPicture();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityPhotoPictureRecord> getRecordType() {
        return ActivityPhotoPictureRecord.class;
    }

    /**
     * The column <code>activity_photo_picture.id</code>. 编号
     */
    public final TableField<ActivityPhotoPictureRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>activity_photo_picture.activity_photo_id</code>. 关联活动相册编号
     */
    public final TableField<ActivityPhotoPictureRecord, Integer> ACTIVITY_PHOTO_ID = createField("activity_photo_id", org.jooq.impl.SQLDataType.INTEGER, this, "关联活动相册编号");

    /**
     * The column <code>activity_photo_picture.picture</code>. 图片
     */
    public final TableField<ActivityPhotoPictureRecord, String> PICTURE = createField("picture", org.jooq.impl.SQLDataType.VARCHAR(255), this, "图片");

    /**
     * The column <code>activity_photo_picture.created</code>. 创建时间
     */
    public final TableField<ActivityPhotoPictureRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>activity_photo_picture.created_by</code>. 创建人
     */
    public final TableField<ActivityPhotoPictureRecord, Integer> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.INTEGER, this, "创建人");

    /**
     * The column <code>activity_photo_picture.order</code>. 排序
     */
    public final TableField<ActivityPhotoPictureRecord, Integer> ORDER = createField("order", org.jooq.impl.SQLDataType.INTEGER, this, "排序");

    /**
     * Create a <code>activity_photo_picture</code> table reference
     */
    public ActivityPhotoPicture() {
        this(DSL.name("activity_photo_picture"), null);
    }

    /**
     * Create an aliased <code>activity_photo_picture</code> table reference
     */
    public ActivityPhotoPicture(String alias) {
        this(DSL.name(alias), ACTIVITY_PHOTO_PICTURE);
    }

    /**
     * Create an aliased <code>activity_photo_picture</code> table reference
     */
    public ActivityPhotoPicture(Name alias) {
        this(alias, ACTIVITY_PHOTO_PICTURE);
    }

    private ActivityPhotoPicture(Name alias, Table<ActivityPhotoPictureRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityPhotoPicture(Name alias, Table<ActivityPhotoPictureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "图片集");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACTIVITY_PHOTO_PICTURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActivityPhotoPictureRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACTIVITY_PHOTO_PICTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityPhotoPictureRecord> getPrimaryKey() {
        return Keys.KEY_ACTIVITY_PHOTO_PICTURE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityPhotoPictureRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityPhotoPictureRecord>>asList(Keys.KEY_ACTIVITY_PHOTO_PICTURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityPhotoPicture as(String alias) {
        return new ActivityPhotoPicture(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityPhotoPicture as(Name alias) {
        return new ActivityPhotoPicture(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityPhotoPicture rename(String name) {
        return new ActivityPhotoPicture(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityPhotoPicture rename(Name name) {
        return new ActivityPhotoPicture(name, null);
    }
}
