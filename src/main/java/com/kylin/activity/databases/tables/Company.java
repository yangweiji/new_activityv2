/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.Activity;
import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.CompanyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 单位公司
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Company extends TableImpl<CompanyRecord> {

    private static final long serialVersionUID = 570183375;

    /**
     * The reference instance of <code>activity.company</code>
     */
    public static final Company COMPANY = new Company();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CompanyRecord> getRecordType() {
        return CompanyRecord.class;
    }

    /**
     * The column <code>activity.company.id</code>. 编号
     */
    public final TableField<CompanyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "编号");

    /**
     * The column <code>activity.company.title</code>. 父编号
     */
    public final TableField<CompanyRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "父编号");

    /**
     * The column <code>activity.company.owner_id</code>. 单位用户负责人
     */
    public final TableField<CompanyRecord, Integer> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.INTEGER, this, "单位用户负责人");

    /**
     * The column <code>activity.company.is_real</code>. 是否通过单位认证
     */
    public final TableField<CompanyRecord, Boolean> IS_REAL = createField("is_real", org.jooq.impl.SQLDataType.BIT, this, "是否通过单位认证");

    /**
     * The column <code>activity.company.fax</code>. 税号
     */
    public final TableField<CompanyRecord, String> FAX = createField("fax", org.jooq.impl.SQLDataType.VARCHAR(255), this, "税号");

    /**
     * The column <code>activity.company.tel</code>. 公司电话
     */
    public final TableField<CompanyRecord, String> TEL = createField("tel", org.jooq.impl.SQLDataType.VARCHAR(255), this, "公司电话");

    /**
     * The column <code>activity.company.address</code>. 公司地址
     */
    public final TableField<CompanyRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(255), this, "公司地址");

    /**
     * The column <code>activity.company.real_time</code>.
     */
    public final TableField<CompanyRecord, Timestamp> REAL_TIME = createField("real_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>activity.company.created</code>.
     */
    public final TableField<CompanyRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>activity.company</code> table reference
     */
    public Company() {
        this(DSL.name("company"), null);
    }

    /**
     * Create an aliased <code>activity.company</code> table reference
     */
    public Company(String alias) {
        this(DSL.name(alias), COMPANY);
    }

    /**
     * Create an aliased <code>activity.company</code> table reference
     */
    public Company(Name alias) {
        this(alias, COMPANY);
    }

    private Company(Name alias, Table<CompanyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Company(Name alias, Table<CompanyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "单位公司");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Activity.ACTIVITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMPANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CompanyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COMPANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CompanyRecord> getPrimaryKey() {
        return Keys.KEY_COMPANY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CompanyRecord>> getKeys() {
        return Arrays.<UniqueKey<CompanyRecord>>asList(Keys.KEY_COMPANY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Company as(String alias) {
        return new Company(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Company as(Name alias) {
        return new Company(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Company rename(String name) {
        return new Company(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Company rename(Name name) {
        return new Company(name, null);
    }
}
