/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables;


import com.kylin.activity.databases.Activityv2;
import com.kylin.activity.databases.Indexes;
import com.kylin.activity.databases.Keys;
import com.kylin.activity.databases.tables.records.ActivityUserRecordRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * 用户报名活动打卡记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityUserRecord extends TableImpl<ActivityUserRecordRecord> {

    private static final long serialVersionUID = -469548891;

    /**
     * The reference instance of <code>activityv2.activity_user_record</code>
     */
    public static final ActivityUserRecord ACTIVITY_USER_RECORD = new ActivityUserRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityUserRecordRecord> getRecordType() {
        return ActivityUserRecordRecord.class;
    }

    /**
     * The column <code>activityv2.activity_user_record.id</code>. 主键，编号
     */
    public final TableField<ActivityUserRecordRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键，编号");

    /**
     * The column <code>activityv2.activity_user_record.activity_user_id</code>. 外键，活动用户表的主键id
     */
    public final TableField<ActivityUserRecordRecord, Integer> ACTIVITY_USER_ID = createField("activity_user_id", org.jooq.impl.SQLDataType.INTEGER, this, "外键，活动用户表的主键id");

    /**
     * The column <code>activityv2.activity_user_record.record_time</code>. 打卡时间
     */
    public final TableField<ActivityUserRecordRecord, Timestamp> RECORD_TIME = createField("record_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "打卡时间");

    /**
     * The column <code>activityv2.activity_user_record.pictures</code>. 打开上传截图，图片可以多张
     */
    public final TableField<ActivityUserRecordRecord, String> PICTURES = createField("pictures", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "打开上传截图，图片可以多张");

    /**
     * The column <code>activityv2.activity_user_record.notes</code>. 打卡备注
     */
    public final TableField<ActivityUserRecordRecord, String> NOTES = createField("notes", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "打卡备注");

    /**
     * Create a <code>activityv2.activity_user_record</code> table reference
     */
    public ActivityUserRecord() {
        this(DSL.name("activity_user_record"), null);
    }

    /**
     * Create an aliased <code>activityv2.activity_user_record</code> table reference
     */
    public ActivityUserRecord(String alias) {
        this(DSL.name(alias), ACTIVITY_USER_RECORD);
    }

    /**
     * Create an aliased <code>activityv2.activity_user_record</code> table reference
     */
    public ActivityUserRecord(Name alias) {
        this(alias, ACTIVITY_USER_RECORD);
    }

    private ActivityUserRecord(Name alias, Table<ActivityUserRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityUserRecord(Name alias, Table<ActivityUserRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户报名活动打卡记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Activityv2.ACTIVITYV2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACTIVITY_USER_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ActivityUserRecordRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ACTIVITY_USER_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityUserRecordRecord> getPrimaryKey() {
        return Keys.KEY_ACTIVITY_USER_RECORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityUserRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityUserRecordRecord>>asList(Keys.KEY_ACTIVITY_USER_RECORD_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityUserRecord as(String alias) {
        return new ActivityUserRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityUserRecord as(Name alias) {
        return new ActivityUserRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityUserRecord rename(String name) {
        return new ActivityUserRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityUserRecord rename(Name name) {
        return new ActivityUserRecord(name, null);
    }
}
