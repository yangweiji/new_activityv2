/*
 * This file is generated by jOOQ.
*/
package com.kylin.activity.databases.tables.daos;


import com.kylin.activity.databases.tables.ActivitySms;
import com.kylin.activity.databases.tables.records.ActivitySmsRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ActivitySmsDao extends DAOImpl<ActivitySmsRecord, com.kylin.activity.databases.tables.pojos.ActivitySms, Integer> {

    /**
     * Create a new ActivitySmsDao without any configuration
     */
    public ActivitySmsDao() {
        super(ActivitySms.ACTIVITY_SMS, com.kylin.activity.databases.tables.pojos.ActivitySms.class);
    }

    /**
     * Create a new ActivitySmsDao with an attached configuration
     */
    @Autowired
    public ActivitySmsDao(Configuration configuration) {
        super(ActivitySms.ACTIVITY_SMS, com.kylin.activity.databases.tables.pojos.ActivitySms.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(com.kylin.activity.databases.tables.pojos.ActivitySms object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchById(Integer... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.kylin.activity.databases.tables.pojos.ActivitySms fetchOneById(Integer value) {
        return fetchOne(ActivitySms.ACTIVITY_SMS.ID, value);
    }

    /**
     * Fetch records that have <code>activity_id IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchByActivityId(Integer... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.ACTIVITY_ID, values);
    }

    /**
     * Fetch records that have <code>template_code IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchByTemplateCode(String... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.TEMPLATE_CODE, values);
    }

    /**
     * Fetch records that have <code>template_name IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchByTemplateName(String... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.TEMPLATE_NAME, values);
    }

    /**
     * Fetch records that have <code>message_content IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchByMessageContent(String... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.MESSAGE_CONTENT, values);
    }

    /**
     * Fetch records that have <code>send_time IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchBySendTime(Timestamp... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.SEND_TIME, values);
    }

    /**
     * Fetch records that have <code>send_user_id IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchBySendUserId(Integer... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.SEND_USER_ID, values);
    }

    /**
     * Fetch records that have <code>send_result_code IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchBySendResultCode(String... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.SEND_RESULT_CODE, values);
    }

    /**
     * Fetch records that have <code>send_result_desc IN (values)</code>
     */
    public List<com.kylin.activity.databases.tables.pojos.ActivitySms> fetchBySendResultDesc(String... values) {
        return fetch(ActivitySms.ACTIVITY_SMS.SEND_RESULT_DESC, values);
    }
}
